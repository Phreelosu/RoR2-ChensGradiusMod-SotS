<?xml version="1.0"?>
<doc>
    <assembly>
        <name>ChensGradiusMod</name>
    </assembly>
    <members>
        <member name="T:Chen.GradiusMod.Drone`1">
            <summary>
            Allows for making drone classes into singleton classes.
            </summary>
            <typeparam name="T">The drone class name</typeparam>
        </member>
        <member name="T:Chen.GradiusMod.Drone">
            <summary>
            The drone class where mod creators should inherit from to ease up development.
            </summary>
        </member>
        <member name="P:Chen.GradiusMod.Drone.enabled">
            <summary>
            Determines if the drone should be enabled/disabled. Disabled drones will not be set up.
            </summary>
        </member>
        <member name="M:Chen.GradiusMod.Drone.PreSetup">
            <summary>
            The first step in the setup process. Place here the logic needed before any processing begins.
            </summary>
        </member>
        <member name="M:Chen.GradiusMod.Drone.SetupConfig">
            <summary>
            The second step in the setup process. Place here all the code related to adding configurations for the custom drone.
            </summary>
        </member>
        <member name="M:Chen.GradiusMod.Drone.SetupComponents">
            <summary>
            The third step in the setup process. Place here all initialization of components, assets, textures, sounds, etc.
            </summary>
        </member>
        <member name="M:Chen.GradiusMod.Drone.SetupBehavior">
            <summary>
            The fourth step in the setup process. Place here the code related to the drone's behavior.
            One may place here mod compatibility code. Hooks should also go here.
            </summary>
        </member>
        <member name="M:Chen.GradiusMod.Drone.PostSetup">
            <summary>
            The fifth step in the setup process. Place here the code for cleanup, or for finalization.
            </summary>
        </member>
        <member name="M:Chen.GradiusMod.Drone.SetupFirstPhase">
            <summary>
            Shorthand for the first and second steps of the setup process along with generic logic. This method is exposed for usage outside of this class.
            </summary>
            <returns>Boolean value if the drone is enabled or not.</returns>
        </member>
        <member name="M:Chen.GradiusMod.Drone.SetupSecondPhase">
            <summary>
            Shorthand for the third, fourth and fifth steps of the setup process. This method is exposed for usage outside of this class.
            </summary>
        </member>
        <member name="M:Chen.GradiusMod.DroneCatalog.Initialize(System.String,BepInEx.Configuration.ConfigFile)">
            <summary>
            Generates a list of data containing the custom drones of the mod that called this method.
            </summary>
            <param name="modGuid">The mod GUID</param>
            <param name="configFile">The file where the mod's custom drones will bind their configs</param>
            <returns>A list of DroneInfos from the mod that called this method.</returns>
        </member>
        <member name="M:Chen.GradiusMod.DroneCatalog.SetupAll(System.Collections.Generic.List{Chen.GradiusMod.DroneInfo})">
            <summary>
            Sets all the custom drones contained in the list up. Mod creators may make their own if they have a sophisticated logic.
            </summary>
            <param name="droneInfos">List of DroneInfos generated by Initialize</param>
        </member>
        <member name="T:Chen.GradiusMod.DroneInfo">
            <summary>
            A structure that stores data of custom drones as well as where they originated from.
            </summary>
        </member>
        <member name="M:Chen.GradiusMod.GradiusOption.SupportMinionType(System.String)">
            <summary>
            Adds a support for a minion for them to gain Options.
            </summary>
            <param name="masterName">The CharacterMaster name of the minion.</param>
            <returns>True if the minion is supported. False if it is already supported.</returns>
        </member>
        <member name="M:Chen.GradiusMod.GradiusOption.UnsupportMinionType(System.String)">
            <summary>
            Removes support for a minion so that they do not acquire Options.
            </summary>
            <param name="masterName">The CharacterMaster name of the minion.</param>
            <returns>True if the minion is not supported anymore. False if it is already unsupported.</returns>
        </member>
        <member name="M:Chen.GradiusMod.GradiusOption.SetToRotateOptions(System.String)">
            <summary>
            Lets the minion use Rotate Options.
            </summary>
            <param name="masterName">The CharacterMaster name of the minion.</param>
            <returns>True if the minion is successfully set to use Rotate Options. False if it is already using Rotate Options.</returns>
        </member>
        <member name="M:Chen.GradiusMod.GradiusOption.SetRotateOptionMultiplier(System.String,System.Single)">
            <summary>
            Sets the rotation multiplier for a minion type. This multiplier affects the distance and speed of rotation.
            </summary>
            <param name="masterName">The CharacterMaster name of the minion.</param>
            <param name="newValue">The multiplier value.</param>
            <returns>True if the values are set. False if not.</returns>
        </member>
        <member name="M:Chen.GradiusMod.GradiusOption.SetRotateOptionOffset(System.String,UnityEngine.Vector3)">
            <summary>
            Sets the offset center position for a minion type. Options will rotate around the offset.
            </summary>
            <param name="masterName">The CharacterMaster name of the minion.</param>
            <param name="newValue">The offset value.</param>
            <returns>True if the values are set. False if not.</returns>
        </member>
        <member name="M:Chen.GradiusMod.GradiusOption.SetToRegularOptions(System.String)">
            <summary>
            Lets the minion use Regular Options.
            </summary>
            <param name="masterName">The CharacterMaster name of the minion.</param>
            <returns>True if the minion is successfully set to use Regular Options. False if it is already using Regular Options.</returns>
        </member>
        <member name="M:Chen.GradiusMod.GradiusOption.LoopAllMinions(RoR2.CharacterMaster,System.Action{UnityEngine.GameObject})">
            <summary>
            Loops through the all the minions of the owner.
            </summary>
            <param name="ownerMaster">The owner of the minions.</param>
            <param name="actionToRun">An action to execute for each minion. The minion's CharacterBody GameObject is given as the input.</param>
        </member>
        <member name="M:Chen.GradiusMod.GradiusOption.FireForAllOptions(RoR2.CharacterBody,System.Action{UnityEngine.GameObject,Chen.GradiusMod.OptionBehavior,UnityEngine.GameObject})">
            <summary>
            Loops through all the Options of the minion.
            </summary>
            <param name="optionOwner">The owner of the option.</param>
            <param name="actionToRun">An action to execute for each Option. The inputs are as follows: GameObject option, OptionBehavior behavior, GameObject target.</param>
        </member>
        <member name="M:Chen.GradiusMod.GradiusOption.OptionSync(RoR2.CharacterBody,System.Action{UnityEngine.Networking.NetworkIdentity,Chen.GradiusMod.OptionTracker},System.Boolean)">
            <summary>
            Syncs the Option from the server to clients. Sync logic should be provided in actionToRun. Mostly used for syncing effects and sounds.
            </summary>
            <param name="optionOwner">The owner of the option.</param>
            <param name="actionToRun">The sync action to perform. Inputs are as follows: NetworkIdentity optionIdentity, OptionTracker tracker.</param>
            <param name="queryTracker">If true, the Option tracker is automatically queried. If false, the Option tracker will not be queried.</param>
        </member>
    </members>
</doc>
